function [corrMatrix_MeanVecPoolFilePath,m,M]=corrMatrix_MeanVecPool(n,rho,corrflag)
    
m=zeros(1,n);
corrMatrix_MeanVecPoolFilePath=mfilename('fullpath'); % (No need to change) to save a copy of this file in the output folder.
if corrflag==1
    M=rho*ones(n,n);
    for i=1:n
        M(i,i)=1;
    end
elseif corrflag==2
    M=eye(n);
    for i=1:n
        for j=1:n
            if i~=j
                M(i,j)=rho^( abs(i-j) );
            end
        end
    end

elseif corrflag==3

    if n==2, M=[1  0.7;
            0.7   1];

    elseif n==3, M=[1   0.3  0.8;
            0.3    1  0.6;
            0.8  0.6    1];

    elseif n==4, M=[1   0.3  0.6   0.4;
            0.3    1  0.5   0.2;
            0.6  0.5    1   0.7;
            0.4  0.2   0.7    1];

    elseif n==5, M=[1   0.3  0.6   0.4  0.5;
            0.3    1  0.5   0.2  0.6;
            0.6  0.5    1   0.7  0.7;
            0.4  0.2   0.7    1  0.8;
            0.5  0.6   0.7  0.8    1];

    elseif n==8, M=[1   0.4  0.6   0.4  0.5   0.8   0.3    0.4;
            0.4    1  0.5   0.2  0.6   0.7   0.2    0.3;
            0.6  0.5    1   0.7  0.7   0.1   0.3    0.5;
            0.4  0.2   0.7    1  0.8   0.6   0.5    0.7;
            0.5  0.6   0.7  0.8    1   0.01  0.02   0.2;
            0.8  0.7   0.1  0.6  0.01    1   0.01  0.01;
            0.3  0.2   0.3  0.5  0.02  0.01   1    0.03;
            0.4  0.3   0.5  0.7   0.2  0.01  0.03     1];

    elseif n==12, M=[1.0000    0.6250    0.8708    0.8327    0.7563    0.7588    0.5866    0.5219    0.8640    0.8305    0.6445    0.6903
            0.6250    1.0000    0.5670    0.6405    0.5778    0.6511    0.4288    0.4350    0.6472    0.6228    0.5203    0.5387
            0.8708    0.5670    1.0000    0.8150    0.7194    0.7444    0.5712    0.4672    0.7730    0.8367    0.6726    0.7467
            0.8327    0.6405    0.8150    1.0000    0.7161    0.8573    0.7157    0.5232    0.8085    0.8920    0.6584    0.7443
            0.7563    0.5778    0.7194    0.7161    1.0000    0.7428    0.5140    0.4018    0.7609    0.7391    0.6222    0.7046
            0.7588    0.6511    0.7444    0.8573    0.7428    1.0000    0.5718    0.4814    0.7391    0.7965    0.5946    0.7051
            0.5866    0.4288    0.5712    0.7157    0.5140    0.5718    1.0000    0.3562    0.5574    0.6057    0.4369    0.5100
            0.5219    0.4350    0.4672    0.5232    0.4018    0.4814    0.3562    1.0000    0.5121    0.5254    0.3912    0.3664
            0.8640    0.6472    0.7730    0.8085    0.7609    0.7391    0.5574    0.5121    1.0000    0.7701    0.7024    0.7405
            0.8305    0.6228    0.8367    0.8920    0.7391    0.7965    0.6057    0.5254    0.7701    1.0000    0.6763    0.7009
            0.6445    0.5203    0.6726    0.6584    0.6222    0.5946    0.4369    0.3912    0.7024    0.6763    1.0000    0.6667
            0.6903    0.5387    0.7467    0.7443    0.7046    0.7051    0.5100    0.3664    0.7405    0.7009    0.6667    1.0000];


    elseif n==20,  M =[1         0.0630    0.1136    0.5638    0.1830    0.0474    0.9351    0.0552    0.1840    0.0271    0.0691    0.2427    0.0491    0.4989    0.4066    0.9597    0.2202    0.9817    0.0003    0.1726;
            0.0630    1         0.0372    0.4828    0.0482    0.4580    0.2171    0.9566    0.1994    0.4196    0.1147    0.3150    0.0275    0.2284    0.5783    0.0639    0.1684    0.8330    0.3332    0.1994;
            0.1136    0.0372    1         0.9254    0.2589    0.6707    0.9363    0.6551    0.2872    0.3337    0.8561    0.6978    0.1118    0.1255    0.4277    0.8118    0.9842    0.6652    0.1219    0.1229;
            0.5638    0.4828    0.9254    1         0.1485    0.0056    0.8817    0.9719    0.6731    0.0977    0.9871    0.8640    0.5198    0.7933    0.2992    0.8628    0.9785    0.6816    0.1543    0.1015;
            0.1830    0.0482    0.2589    0.1485    1         0.1853    0.7566    0.9486    0.2479    0.0842    0.4692    0.8842    0.0859    0.3435    0.4130    0.9724    0.3547    0.7965    0.1880    0.4991;
            0.0474    0.4580    0.6707    0.0056    0.1853    1         0.2492    0.0579    0.4661    0.1544    0.4850    0.1014    0.1996    0.0808    0.6922    0.6129    0.0089    0.8365    0.0937    0.0089;
            0.9351    0.2171    0.9363    0.8817    0.7566    0.2492    1         0.6621    0.9083    0.0141    0.8896    0.9148    0.8163    0.8515    0.3960    0.9657    0.8057    0.8293    0.0543    0.9408;
            0.0552    0.9566    0.6551    0.9719    0.9486    0.0579    0.6621    1         0.0191    0.0191    0.8409    0.6944    0.7299    0.7058    0.3949    0.7149    0.7086    0.7030    0.6330    0.0473;
            0.1840    0.1994    0.2872    0.6731    0.2479    0.4661    0.9083    0.0191    1         0.3566    0.5682    0.8194    0.1043    0.8389    0.5118    0.8441    0.5936    0.8333    0.0720    0.0936;
            0.0271    0.4196    0.3337    0.0977    0.0842    0.1544    0.0141    0.0191    0.3566    1         0.0176    0.0955    0.1835    0.3458    0.8871    0.2765    0.2328    0.8264    0.0846    0.6660;
            0.0691    0.1147    0.8561    0.9871    0.4692    0.4850    0.8896    0.8409    0.5682    0.0176    1         0.9052    0.0942    0.1626    0.2958    0.7146    0.9510    0.4168    0.9884    0.1241;
            0.2427    0.3150    0.6978    0.8640    0.8842    0.1014    0.9148    0.6944    0.8194    0.0955    0.9052    1         0.1028    0.2504    0.2895    0.7259    0.4574    0.4249    0.9932    0.2909;
            0.0491    0.0275    0.1118    0.5198    0.0859    0.1996    0.8163    0.7299    0.1043    0.1835    0.0942    0.1028    1         0.0127    0.4346    0.4736    0.1568    0.9889    0.0212    0.0728;
            0.4989    0.2284    0.1255    0.7933    0.3435    0.0808    0.8515    0.7058    0.8389    0.3458    0.1626    0.2504    0.0127    1         0.1088    0.7107    0.9035    0.5166    0.1232    0.1983;
            0.4066    0.5783    0.4277    0.2992    0.4130    0.6922    0.3960    0.3949    0.5118    0.8871    0.2958    0.2895    0.4346    0.1088    1         0.6585    0.4940    0.6021    0.9023    0.4746;
            0.9597    0.0639    0.8118    0.8628    0.9724    0.6129    0.9657    0.7149    0.8441    0.2765    0.7146    0.7259    0.4736    0.7107    0.6585    1         0.5592    0.9447    0.0756    0.3366;
            0.2202    0.1684    0.9842    0.9785    0.3547    0.0089    0.8057    0.7086    0.5936    0.2328    0.9510    0.4574    0.1568    0.9035    0.4940    0.5592    1         0.7696    0.1221    0.0041;
            0.9817    0.8330    0.6652    0.6816    0.7965    0.8365    0.8293    0.7030    0.8333    0.8264    0.4168    0.4249    0.9889    0.5166    0.6021    0.9447    0.7696    1         0.2210    0.8769;
            0.0003    0.3332    0.1219    0.1543    0.1880    0.0937    0.0543    0.6330    0.0720    0.0846    0.9884    0.9932    0.0212    0.1232    0.9023    0.0756    0.1221    0.2210    1         0.1006;
            0.1726    0.1994    0.1229    0.1015    0.4991    0.0089    0.9408    0.0473    0.0936    0.6660    0.1241    0.2909    0.0728    0.1983    0.4746    0.3366    0.0041    0.8769    0.1006    1  ];

    elseif n==30,M=0.8*ones(30,30);
        for i=1:30, M(i,i)=1;
        end
    else
        disp('define correlation matrix and mean vector for given no. of infoCol has not been defined in the pool');
        error('Correlation matrix and mean vector of dim %d have not been set in the (corrMatrix_MeanVecPool) subroutine in the first file',n);
    end
end

end